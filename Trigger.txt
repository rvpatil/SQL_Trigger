--Creating Products Table
CREATE TABLE PRODUCTS(PID INT,
                      PNAME VARCHAR(10),
                      PRICE INT,
                      QTY INT,
                      PRIMARY KEY(PID));
DROP TABLE PRODUCTS;                    
INSERT INTO PRODUCTS VALUES(1,'KEYBOARD',700,1000);
INSERT INTO PRODUCTS VALUES(2,'mobile',40000,100);
INSERT INTO PRODUCTS VALUES(3,'pendrive',500,100);
INSERT INTO PRODUCTS VALUES(4,'mouse',300,100);
INSERT INTO PRODUCTS VALUES(5,'mic',3000,10);
 
SELECT * FROM PRODUCTS;
--Creating Sales Table
CREATE TABLE SALES(SID INT,
                   PID INT,
                   QTY INT,
                   PRICE INT,
                   PRIMARY KEY(SID),
                   FOREIGN KEY(PID)REFERENCES PRODUCTS(PID)
                   ON DELETE SET NULL
                   );

DROP TABLE SALES;
INSERT INTO SALES VALUES(11,1,100,NULL);
INSERT INTO SALES VALUES(12,2,10,NULL);
INSERT INTO SALES VALUES(13,1,200,NULL);
INSERT INTO SALES VALUES(14,1,20,NULL);
delete from sales where pid=1;
SELECT * FROM sales;
SELECT * FROM SALES S, PRODUCTS P;




ALTER TABLE SALES ADD CONSTRAINT FK_PID
FOREIGN KEY(PID) REFERENCES PRODUCTS(PID) ON DELETE CASCADE;


SELECT * FROM SALES;
DROP TABLE SALES;
DROP TABLE PRODUCTS;

CREATE OR REPLACE TRIGGER PRODSTOCK
AFTER INSERT ON SALES
FOR EACH ROW
BEGIN
UPDATE PRODUCTS
SET QTY=QTY-:new.QTY
where PID=:new.PID;
END;


SELECT QTY FROM SALES WHERE PID=11;
set serveroutput on;

CREATE OR REPLACE PROCEDURE UPDATEPRICE(SSID IN INT,PPID IN INT)
AS
SQTY INT;
PPRICE INT;
PPNAME VARCHAR(20);
CURSOR C1 IS (SELECT QTY FROM SALES WHERE PID=PPID AND SID=SSID);
CURSOR C2 IS (SELECT PNAME,PRICE FROM PRODUCTS WHERE PID=PPID);
BEGIN
OPEN C1; OPEN C2;
FETCH C1 INTO SQTY;
FETCH C2 INTO PPNAME,PPRICE;
dbms_output.put_line('PRODUCT NAME: '||PPNAME);
dbms_output.put_line('QUANTITY PURCHASED: '||SQTY);
dbms_output.put_line('PRICE PER ITEM: '||PPRICE);
dbms_output.put_line('TOTAL BILL TO BE PAID: '||PPRICE*SQTY);
UPDATE SALES SET PRICE=(PPRICE*SQTY) WHERE PID=PPID AND SID=SSID;
CLOSE C1;
CLOSE C2;
END;
/
SET SERVEROUTPUT ON;

EXEC UPDATEPRICE(11,1);

BEGIN
dbms_output.put_line('hi');
END;
BEGIN
UPDATEPRICE(11);
END;
/

BEGIN
 dbms_output.put_line('This is my first program');
END;
/

DECLARE
PPID INT;
PPNAME VARCHAR(10);
PPRICE INT;
CURSOR C1 IS SELECT PID,PNAME,PRICE FROM PRODUCTS;
BEGIN
OPEN C1;
LOOP
FETCH C1 INTO PPID,PPNAME,PPRICE;
DBMS_OUTPUT.PUT_LINE(PPID||' '||PPNAME||' '||PPRICE||' '||C1%ROWCOUNT);
EXIT WHEN C1%NOTFOUND;
END LOOP;
CLOSE C1;
END;

EXEC
SELECT * FROM PRODUCTS;